{"version":3,"sources":["components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["StyledInput","styled","input","Input","val","ind","updateTeams","teams","useState","value","setValue","onChange","event","target","tempTeams","OuterDiv","div","InnerDiv","WheelContainer","CPBettingLogo","img","InputContainer","StyledH1","h1","FormContainer","PlusMinus","InputRow","PieWrapper","props","rotate","Pointer","Modal","display","WinnerBox","App","JSON","parse","localStorage","getItem","setTeams","rotation","setRotation","piData","setPiData","makeItRain","setRain","winner","setWinner","newTeams","setItem","stringify","data","labels","datasets","borderColor","borderWidth","backgroundColor","hoverBackgroundColor","width","window","innerWidth","height","innerHeight","colors","run","recycle","onConfettiComplete","confetti","reset","options","plugins","datalabels","color","align","title","font","weight","size","formatter","context","chart","dataIndex","tooltips","enabled","hover","mode","legend","src","onClick","length","rand","Math","floor","random","deg","angle","index","setTimeout","tempArr","tempPiData","push","map","team","i","splice","subtractTeam","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0hBAIA,IAAMA,EAAcC,IAAOC,MAAV,KA4BFC,MAdf,YAAkD,IAAjCC,EAAgC,EAAhCA,IAAKC,EAA2B,EAA3BA,IAAKC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,MAAS,EACrBC,mBAAS,IADY,mBACxCC,EADwC,KACjCC,EADiC,KAW/C,OAAO,cAACV,EAAD,CAAaS,MAAOL,GAAOK,EAAOE,SATf,SAACC,GACzB,IACMH,EADSG,EAAMC,OACAJ,MACrBC,EAASD,GACT,IAAIK,EAAS,YAAOP,GACpBO,EAAUT,GAAOI,EACjBH,EAAYQ,O,unGClBhB,IAAMC,EAAWd,IAAOe,IAAV,KAORC,EAAWhB,IAAOe,IAAV,KAKRE,EAAiBjB,IAAOe,IAAV,KAUdG,EAAgBlB,IAAOmB,IAAV,KAcbC,EAAiBpB,IAAOe,IAAV,KAOdM,EAAWrB,IAAOsB,GAAV,KAGRC,EAAgBvB,IAAOe,IAAV,KAIbb,EAAQF,IAAOC,MAAV,KAaLuB,EAAYxB,IAAOe,IAAV,KAuBTU,EAAWzB,IAAOe,IAAV,KAGRW,EAAa1B,IAAOe,IAAV,KAED,SAACY,GAAD,OAAWA,EAAMC,UAE1BC,EAAU7B,IAAOe,IAAV,KASPe,EAAQ9B,IAAOe,IAAV,KASK,SAACY,GAAD,OAAYA,EAAMI,QAAU,UAAY,YAElDC,EAAYhC,IAAOe,IAAV,KA+PAkB,MAlPf,WAAgB,IAAD,EACa1B,mBACxB2B,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAFlC,mBACN/B,EADM,KACCgC,EADD,OAIa/B,mBAAS,IAJtB,mBAINC,EAJM,KAICC,EAJD,OAKmBF,mBAAS,GAL5B,mBAKNgC,EALM,KAKIC,EALJ,OAMejC,mBAC1B2B,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,IAPnC,mBAMNI,EANM,KAMEC,EANF,OASiBnC,oBAAS,GAT1B,mBASNoC,EATM,KASMC,EATN,OAUerC,mBAAS,IAVxB,mBAUNsC,EAVM,KAUEC,EAVF,KAYPzC,EAAc,SAAC0C,GACnBT,EAASS,GACTX,aAAaY,QAAQ,QAASd,KAAKe,UAAUF,KA6C3CG,EAAO,CACTC,OAAQ7C,EACR8C,SAAU,CACR,CACEF,KAAMT,EACNY,YAAa,UACbC,YAAa,EACbC,gBAAiB,CACf,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEFC,qBAAsB,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,cAoCR,OACE,qCACE,eAAC1B,EAAD,CAAOC,QAASY,EAAhB,UACE,cAACX,EAAD,UACE,6BAAKa,MAEP,cAAC,IAAD,CACEY,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,YACfC,OAAQ,CAAC,UAAW,UAAW,WAC/BC,IAAKpB,EACLqB,SAAS,EACTC,mBAAoB,SAACC,GACnBtB,GAAQ,GACRsB,EAASC,cAIf,cAACrD,EAAD,UACE,eAACE,EAAD,WACE,eAACC,EAAD,WACE,cAACS,EAAD,CAAYE,OAAM,iBAAYW,EAAZ,QAAlB,SACE,cAAC,MAAD,CAAKkB,MAAO,IAAKG,OAAQ,IAAKV,KAAMA,EAAMkB,QArDtC,CACdC,QAAS,CACPC,WAAY,CACVC,MAAO,QACPhC,SAAU,EAEViC,MAAO,MAEPrB,OAAQ,CACNsB,MAAO,CACLC,KAAM,CACJC,OAAQ,OACRC,KAAM,MAIZC,UAAW,SAAUrE,EAAOsE,GAC1B,OAAOA,EAAQC,MAAM7B,KAAKC,OAAO2B,EAAQE,cAI/CC,SAAU,CAAEC,SAAS,GACrBC,MAAO,CAAEC,KAAM,MACfC,OAAQ,CACNtD,SAAS,EACToB,OAAQ,CACNpB,SAAS,SA6BL,cAACF,EAAD,IACA,cAACX,EAAD,CACEoE,IAAI,8OACJC,QAvKC,WAEX,GADA3C,GAAQ,GACJtC,EAAMkF,OAAS,EAAG,CACpB,IAAIC,EAAOlD,EAAWmD,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,KACzDpD,EAAYiD,GACZ,IAAII,EAAM,IAAOJ,EAAO,IACpBK,EAAQ,IAAMxF,EAAMkF,OACpBO,EAAQL,KAAKC,MAAME,EAAMC,GAC7BE,YAAW,WACTpD,GAAQ,GACRE,EAAUxC,EAAMyF,MACf,aA+JC,eAAC3E,EAAD,WACE,cAACC,EAAD,2BACA,eAACI,EAAD,WACE,cAAC,EAAD,CAAOjB,MAAOA,EAAOE,SAzMP,SAACC,GACzB,IACMR,EADSQ,EAAMC,OACFJ,MACnBC,EAASN,MAuMC,cAACqB,EAAD,CAAW+D,QArMP,WACd,GAAI/E,EAAMgF,OAAS,EAAG,CACpB,IAAIS,EAAO,YAAO3F,GACd4F,EAAU,YAAOzD,GACrBwD,EAAQE,KAAK3F,GACb0F,EAAWC,KAAK,GAChB7D,EAAS2D,GACT7D,aAAaY,QAAQ,QAASd,KAAKe,UAAUgD,IAC7CvD,EAAUwD,GACV9D,aAAaY,QAAQ,SAAUd,KAAKe,UAAUiD,IAC9CzF,EAAS,MA2LD,oBAEF,cAACc,EAAD,UACGjB,EAAM8F,KAAI,SAACC,EAAMC,GAChB,OACE,eAAC7E,EAAD,WACE,cAAC,EAAD,CACErB,IAAKkG,EACLnG,IAAKkG,EACL/F,MAAOA,EACPD,YAAaA,IAEf,cAACmB,EAAD,CAAW+D,QAAS,kBApMjB,SAACQ,GACpB,IAAIE,EAAO,YAAO3F,GACd4F,EAAU,YAAOzD,GACrBwD,EAAQM,OAAOR,EAAO,GACtBG,EAAWK,OAAOR,EAAO,GACzBzD,EAAS2D,GACT7D,aAAaY,QAAQ,QAASd,KAAKe,UAAUgD,IAC7CvD,EAAUwD,GACV9D,aAAaY,QAAQ,SAAUd,KAAKe,UAAUiD,IA4LJM,CAAaF,IAAvC,mBAPaA,oBCzVlBG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6caaaea5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport styled from \"styled-components\";\n\nconst StyledInput = styled.input`\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 16px;\n  height: 30px;\n  border-radius: 5px;\n  border: none;\n  background-color: #3c3939;\n  margin-bottom: 16px;\n  margin-right: 16px;\n  flex: 1;\n`;\n\nfunction Input({ val, ind, updateTeams, teams }) {\n  const [value, setValue] = useState(\"\");\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    setValue(value);\n    let tempTeams = [...teams];\n    tempTeams[ind] = value;\n    updateTeams(tempTeams);\n  };\n\n  return <StyledInput value={val || value} onChange={handleInputChange} />;\n}\n\nexport default Input;\n","import React, { useState } from \"react\";\n\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport Confetti from \"react-confetti\";\nimport { Pie } from \"react-chartjs-2\";\nimport StyledInput from \"./components/Input\";\nimport styled from \"styled-components\";\n\nconst OuterDiv = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100vh;\n  color: white;\n`;\nconst InnerDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst WheelContainer = styled.div`\n  position: relative;\n  width: 600px;\n  height: 600px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 50px;\n  margin-top: 50px;\n`;\nconst CPBettingLogo = styled.img`\n  width: 70px;\n  height: 70px;\n  border-radius: 50%;\n  border: 5px solid white;\n  position: absolute;\n  top: calc(50% - 40px);\n  left: calc(50% - 40px);\n  transition: all 0.3s ease;\n  &:hover {\n    cursor: pointer;\n    border: 5px solid white;\n  }\n`;\nconst InputContainer = styled.div`\n  width: 400px;\n  background-color: #2f2c2c;\n  border-radius: 10px;\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n  padding: 0 16px;\n`;\nconst StyledH1 = styled.h1`\n  text-align: center;\n`;\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Input = styled.input`\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n  padding: 8px 16px;\n  height: 30px;\n  border-radius: 5px;\n  border: none;\n  background-color: #3c3939;\n  margin-bottom: 16px;\n  margin-right: 16px;\n  flex: 1;\n`;\nconst PlusMinus = styled.div`\n  width: 30px;\n  height: 30px;\n  background-color: #3c3939;\n  border-radius: 5px;\n  padding: 8px 16px;\n  font-size: 16px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 0.2s ease;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  &:hover {\n    cursor: pointer;\n    background-color: #4a4a4a;\n  }\n`;\nconst InputRow = styled.div`\n  display: flex;\n`;\nconst PieWrapper = styled.div`\n  transition: all 3s ease-out;\n  transform: ${(props) => props.rotate};\n`;\nconst Pointer = styled.div`\n  width: 6px;\n  height: 50px;\n  background-color: white;\n  position: absolute;\n  top: -10px;\n  left: calc(50% - 3px);\n  box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.16);\n`;\nconst Modal = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  backdrop-filter: blur(2px);\n  background-color: rgba(0, 0, 0, 0.5);\n  position: absolute;\n  z-index: 100;\n  visibility: ${(props) => (props.display ? \"visible\" : \"hidden\")};\n`;\nconst WinnerBox = styled.div`\n  margin-top: 250px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n  width: 600px;\n  background-color: black;\n  color: white;\n  border-radius: 10px;\n  border: 2px solid white;\n`;\n\nfunction App() {\n  const [teams, setTeams] = useState(\n    JSON.parse(localStorage.getItem(\"teams\")) || []\n  );\n  const [value, setValue] = useState(\"\");\n  const [rotation, setRotation] = useState(0);\n  const [piData, setPiData] = useState(\n    JSON.parse(localStorage.getItem(\"piData\")) || []\n  );\n  const [makeItRain, setRain] = useState(false);\n  const [winner, setWinner] = useState(\"\");\n\n  const updateTeams = (newTeams) => {\n    setTeams(newTeams);\n    localStorage.setItem(\"teams\", JSON.stringify(newTeams));\n  };\n  const handleInputChange = (event) => {\n    const target = event.target;\n    const val = target.value;\n    setValue(val);\n  };\n  const addTeam = () => {\n    if (value.length > 0) {\n      let tempArr = [...teams];\n      let tempPiData = [...piData];\n      tempArr.push(value);\n      tempPiData.push(1);\n      setTeams(tempArr);\n      localStorage.setItem(\"teams\", JSON.stringify(tempArr));\n      setPiData(tempPiData);\n      localStorage.setItem(\"piData\", JSON.stringify(tempPiData));\n      setValue(\"\");\n    }\n  };\n  const subtractTeam = (index) => {\n    let tempArr = [...teams];\n    let tempPiData = [...piData];\n    tempArr.splice(index, 1);\n    tempPiData.splice(index, 1);\n    setTeams(tempArr);\n    localStorage.setItem(\"teams\", JSON.stringify(tempArr));\n    setPiData(tempPiData);\n    localStorage.setItem(\"piData\", JSON.stringify(tempPiData));\n  };\n  const spin = () => {\n    setRain(false);\n    if (teams.length > 0) {\n      let rand = rotation + Math.floor(Math.random() * 5000) + 1080;\n      setRotation(rand);\n      let deg = 360 - (rand % 360);\n      let angle = 360 / teams.length;\n      let index = Math.floor(deg / angle);\n      setTimeout(() => {\n        setRain(true);\n        setWinner(teams[index]);\n      }, 3250);\n    }\n  };\n\n  let data = {\n    labels: teams,\n    datasets: [\n      {\n        data: piData,\n        borderColor: \"#ffffff\",\n        borderWidth: 3,\n        backgroundColor: [\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n        ],\n        hoverBackgroundColor: [\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n          \"#000000\",\n          \"#00f374\",\n        ],\n      },\n    ],\n  };\n  const options = {\n    plugins: {\n      datalabels: {\n        color: \"white\",\n        rotation: 0,\n        // anchor: \"end\",\n        align: \"end\",\n\n        labels: {\n          title: {\n            font: {\n              weight: \"bold\",\n              size: 18,\n            },\n          },\n        },\n        formatter: function (value, context) {\n          return context.chart.data.labels[context.dataIndex];\n        },\n      },\n    },\n    tooltips: { enabled: false },\n    hover: { mode: null },\n    legend: {\n      display: false,\n      labels: {\n        display: false,\n      },\n    },\n  };\n\n  return (\n    <>\n      <Modal display={makeItRain}>\n        <WinnerBox>\n          <h1>{winner}</h1>\n        </WinnerBox>\n        <Confetti\n          width={window.innerWidth}\n          height={window.innerHeight}\n          colors={[\"#000000\", \"#00f374\", \"#ffffff\"]}\n          run={makeItRain}\n          recycle={false}\n          onConfettiComplete={(confetti) => {\n            setRain(false);\n            confetti.reset();\n          }}\n        />\n      </Modal>\n      <OuterDiv>\n        <InnerDiv>\n          <WheelContainer>\n            <PieWrapper rotate={`rotate(${rotation}deg)`}>\n              <Pie width={600} height={600} data={data} options={options} />\n            </PieWrapper>\n            <Pointer />\n            <CPBettingLogo\n              src=\"https://scontent-sjc3-1.cdninstagram.com/v/t51.2885-19/s150x150/91508536_549648065667734_8310853153318764544_n.jpg?_nc_ht=scontent-sjc3-1.cdninstagram.com&_nc_ohc=MtbcmRUBDekAX_cTAuj&tp=1&oh=0e64c620694c7aef19530652348dcb9f&oe=60261409\"\n              onClick={spin}\n            />\n          </WheelContainer>\n          <InputContainer>\n            <StyledH1>Spread Lines</StyledH1>\n            <InputRow>\n              <Input value={value} onChange={handleInputChange} />\n              <PlusMinus onClick={addTeam}> + </PlusMinus>\n            </InputRow>\n            <FormContainer>\n              {teams.map((team, i) => {\n                return (\n                  <InputRow key={i}>\n                    <StyledInput\n                      ind={i}\n                      val={team}\n                      teams={teams}\n                      updateTeams={updateTeams}\n                    />\n                    <PlusMinus onClick={() => subtractTeam(i)}> - </PlusMinus>\n                  </InputRow>\n                );\n              })}\n            </FormContainer>\n          </InputContainer>\n        </InnerDiv>\n      </OuterDiv>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}